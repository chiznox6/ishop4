import React from 'react';
import { useFormik } from 'formik';
import * as Yup from 'yup';

const ProductForm = ({ onAddProduct }) => {
  const validationSchema = Yup.object({
    productName: Yup.string().required('Product Name is required'),
    productDescription: Yup.string(),
    productPrice: Yup.number()
      .required('Price is required')
      .positive('Price must be a positive number')
      .typeError('Price must be a number'),
    productImage: Yup.string().url('Invalid URL format').nullable(),
  });

  const formik = useFormik({
    initialValues: {
      productName: '',
      productDescription: '',
      productPrice: '',
      productImage: '',
    },
    validationSchema: validationSchema,
    onSubmit: (values, { resetForm }) => {
      const newProduct = {
        id: Date.now(), // Simple unique ID, ideally generated by backend
        name: values.productName,
        description: values.productDescription,
        price: parseFloat(values.productPrice),
        image: values.productImage || 'https://via.placeholder.com/150', // Default image
      };
      onAddProduct(newProduct);
      resetForm();
    },
  });

  return (
    <div className="card bg-base-100 shadow-xl p-6"> {/* DaisyUI card */}
      <h2 className="text-2xl font-bold mb-4 text-base-content">Add New Product</h2> {/* DaisyUI text color */}
      <form onSubmit={formik.handleSubmit}>
        <div className="form-control mb-4"> {/* DaisyUI form-control */}
          <label htmlFor="productName" className="label">
            <span className="label-text text-base-content">Product Name:</span>
          </label>
          <input
            type="text"
            id="productName"
            name="productName"
            className={`input input-bordered w-full ${formik.touched.productName && formik.errors.productName ? 'input-error' : ''}`}
            value={formik.values.productName}
            onChange={formik.handleChange}
            onBlur={formik.handleBlur}
          />
          {formik.touched.productName && formik.errors.productName ? (
            <label className="label">
              <span className="label-text-alt text-error">{formik.errors.productName}</span>
            </label>
          ) : null}
        </div>
        <div className="form-control mb-4"> {/* DaisyUI form-control */}
          <label htmlFor="productDescription" className="label">
            <span className="label-text text-base-content">Description:</span>
          </label>
          <textarea
            id="productDescription"
            name="productDescription"
            className="textarea textarea-bordered w-full" // DaisyUI textarea
            value={formik.values.productDescription}
            onChange={formik.handleChange}
            onBlur={formik.handleBlur}
            rows="3"
          ></textarea>
        </div>
        <div className="form-control mb-4"> {/* DaisyUI form-control */}
          <label htmlFor="productPrice" className="label">
            <span className="label-text text-base-content">Price:</span>
          </label>
          <input
            type="number"
            id="productPrice"
            name="productPrice"
            className={`input input-bordered w-full ${formik.touched.productPrice && formik.errors.productPrice ? 'input-error' : ''}`}
            value={formik.values.productPrice}
            onChange={formik.handleChange}
            onBlur={formik.handleBlur}
            step="0.01"
          />
          {formik.touched.productPrice && formik.errors.productPrice ? (
            <label className="label">
              <span className="label-text-alt text-error">{formik.errors.productPrice}</span>
            </label>
          ) : null}
        </div>
        <div className="form-control mb-4"> {/* DaisyUI form-control */}
          <label htmlFor="productImage" className="label">
            <span className="label-text text-base-content">Image URL:</span>
          </label>
          <input
            type="text"
            id="productImage"
            name="productImage"
            className={`input input-bordered w-full ${formik.touched.productImage && formik.errors.productImage ? 'input-error' : ''}`}
            value={formik.values.productImage}
            onChange={formik.handleChange}
            onBlur={formik.handleBlur}
          />
          {formik.touched.productImage && formik.errors.productImage ? (
            <label className="label">
              <span className="label-text-alt text-error">{formik.errors.productImage}</span>
            </label>
          ) : null}
        </div>
        <button
          type="submit"
          className="btn btn-primary" // DaisyUI primary button
          disabled={!formik.isValid || formik.isSubmitting}
        >
          Add Product
        </button>
      </form>
    </div>
  );
};

export default ProductForm;
